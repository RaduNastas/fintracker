@startuml

' Definim clasa TransactionRepository
class TransactionRepository {
  - {static} DEFAULT_DB_PATH: String <<final>>
  - {static} DB_URL: String <<final>>
  - {static} DB_USER: String <<final>>
  - {static} DB_PASSWORD: String <<final>>
  - connection: Connection <<final>>
  + TransactionRepository()
  - initializeDatabase(): void
  + save(transaction: Transaction): void
  + delete(id: long): void
  + update(transaction: Transaction): void
  + findByFilter(type: String, category: String, startDate: LocalDateTime, endDate: LocalDateTime): List<Transaction>
  + getAll(): List<Transaction>
  + findById(id: long): Transaction
  + close(): void
}

' Definim clasa Transaction (bazată pe utilizarea din TransactionRepository)
class Transaction {
  - id: long
  - type: String
  - amount: double
  - category: String
  - date: LocalDateTime
  + Transaction(id: long, type: String, amount: double, category: String, date: LocalDateTime)
  + getId(): long
  + getType(): String
  + getAmount(): double
  + getCategory(): String
  + getDate(): LocalDateTime
}

' Definim relația dintre TransactionRepository și Transaction
' TransactionRepository folosește mai multe instanțe de Transaction (asociere)
TransactionRepository o--> "many" Transaction : uses

@enduml